[{"C:\\Users\\kedar\\Documents\\cod\\client\\src\\index.js":"1","C:\\Users\\kedar\\Documents\\cod\\client\\src\\components\\MatchStats\\index.js":"2","C:\\Users\\kedar\\Documents\\cod\\client\\src\\components\\MatchStats\\MatchStats.js":"3","C:\\Users\\kedar\\Documents\\cod\\client\\src\\components\\DataUpdater\\index.js":"4","C:\\Users\\kedar\\Documents\\cod\\client\\src\\components\\DataUpdater\\DataUpdater.js":"5","C:\\Users\\kedar\\Documents\\cod\\client\\src\\Main.js":"6","C:\\Users\\kedar\\Documents\\cod\\client\\src\\components\\Home\\Home.js":"7","C:\\Users\\kedar\\Documents\\cod\\client\\src\\components\\Home\\index.js":"8","C:\\Users\\kedar\\Documents\\cod\\client\\src\\components\\GameDetail\\index.js":"9","C:\\Users\\kedar\\Documents\\cod\\client\\src\\components\\GameDetail\\GameDetail.js":"10"},{"size":382,"mtime":1610216549702,"results":"11","hashOfConfig":"12"},{"size":68,"mtime":1609713098638,"results":"13","hashOfConfig":"12"},{"size":7193,"mtime":1610309796238,"results":"14","hashOfConfig":"12"},{"size":71,"mtime":1609715366684,"results":"15","hashOfConfig":"12"},{"size":560,"mtime":1609813163767,"results":"16","hashOfConfig":"12"},{"size":318,"mtime":1610219200415,"results":"17","hashOfConfig":"12"},{"size":4853,"mtime":1610220005100,"results":"18","hashOfConfig":"12"},{"size":50,"mtime":1610216650809,"results":"19","hashOfConfig":"12"},{"size":68,"mtime":1610216670860,"results":"20","hashOfConfig":"12"},{"size":877,"mtime":1610219908394,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1abs6id",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\kedar\\Documents\\cod\\client\\src\\index.js",[],["45","46"],"C:\\Users\\kedar\\Documents\\cod\\client\\src\\components\\MatchStats\\index.js",[],"C:\\Users\\kedar\\Documents\\cod\\client\\src\\components\\MatchStats\\MatchStats.js",[],"C:\\Users\\kedar\\Documents\\cod\\client\\src\\components\\DataUpdater\\index.js",[],"C:\\Users\\kedar\\Documents\\cod\\client\\src\\components\\DataUpdater\\DataUpdater.js",["47"],"import React, { useCallback } from 'react';\r\nimport { Text, Link} from '@chakra-ui/react'\r\nimport TimeAgo from 'timeago-react';\r\n\r\nconst DataUpdater = props => {\r\n    const handleClick = useCallback(async () => {\r\n        props.refreshFn();\r\n    });\r\n    return (<>\r\n        updated <TimeAgo datetime={props.time}/>{' '}\r\n        <Text as=\"sup\">\r\n            <Text as=\"b\">\r\n                <Link onClick={handleClick}>\r\n                    manual refresh?\r\n            </Link>\r\n            </Text>\r\n        </Text>\r\n    </>);\r\n};\r\n\r\nexport default DataUpdater;","C:\\Users\\kedar\\Documents\\cod\\client\\src\\Main.js",[],"C:\\Users\\kedar\\Documents\\cod\\client\\src\\components\\Home\\Home.js",["48"],"import React, { Component } from 'react';\nimport {\n  Grid,\n  CSSReset,\n  Text,\n  Flex,\n  Progress,\n  Heading,\n  createStandaloneToast,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from '@chakra-ui/react';\nimport MatchStats from '../MatchStats';\nimport DataUpdater from '../DataUpdater';\nimport GameDetail from '../GameDetail';\n\nconst PAGE_AMOUNT = 50;\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matches: null,\n      pageOffset: 0,\n      updatedAt: null,\n      viewingGameDetail: props.match?.params?.id,\n      modalOpen: props.match?.params?.id !== undefined,\n    }\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  handleDataRefresh = async () => {\n    const toast = createStandaloneToast()\n    toast({\n      position: \"bottom-left\",\n      title: \"Refreshing Data\",\n      description: \"We've issued a data refresh.\",\n      status: \"info\",\n      duration: 6000,\n      isClosable: true,\n    })\n    const response = await fetch(process.env.REACT_APP_HOST + '/refresh');\n    const data = await response.json();\n    if (data['message'] === \"SUCCESS\") {\n      await this.populateMatches();\n      toast({\n        position: \"bottom-left\",\n        title: \"Refresh Complete\",\n        description: \"We've pulled in new data.\",\n        status: \"success\",\n        duration: 6000,\n        isClosable: true,\n      })\n    } else {\n      toast({\n        position: \"bottom-left\",\n        title: \"Refresh Refused\",\n        description: \"It looks like we've already refreshed data recently. Try again later.\",\n        status: \"warning\",\n        duration: 6000,\n        isClosable: true,\n      })\n    }\n  }\n\n  populateMatches = async () => {\n    const response = await fetch(process.env.REACT_APP_HOST + '/api');\n    const data = await response.json();\n    let matches = [];\n\n    // Transform data into array of arrays of match objects\n    data['results'].forEach((match => {\n      let appended = false;\n      for (let i = 0; i < matches.length; i++) {\n        if (matches[i][0].matchId === match['matchId']) {\n          matches[i].push(match);\n          appended = true;\n          break;\n        }\n      }\n      if (!appended) {\n        matches.push([match]);\n      }\n    }));\n    this.setState({ matches, updatedAgo: data['updatedAgo'] });\n\n    if (data['triggerRefresh']) {\n      this.handleDataRefresh();\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateMatches();\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  // Listen for scroll to bottom to infinite-scroll\n  handleScroll() {\n    const windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight;\n    const body = document.body;\n    const html = document.documentElement;\n    const docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n    const windowBottom = windowHeight + window.pageYOffset;\n    if (windowBottom >= docHeight) {\n      this.setState({\n        pageOffset: this.state.pageOffset + PAGE_AMOUNT\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CSSReset />\n        {this.state.viewingGameDetail && (\n        <>\n        <Modal closeOnOverlayClick={true} isOpen={this.state.modalOpen} onClose={()=>{this.setState({\"modalOpen\": false})}}>\n                <ModalOverlay />\n                <ModalContent>\n                    <ModalHeader>Game Detail</ModalHeader>\n                    <ModalCloseButton />\n                    <ModalBody pb={6}>\n                      <GameDetail matchId={this.props.match.params.id}/>\n                    </ModalBody>\n                </ModalContent>\n            </Modal>\n        </>)}\n        <Flex\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          textAlign=\"center\"\n          mt={4}\n        >\n          <Flex\n            display=\"flex\"\n            flexDirection=\"row\"\n            alignItems=\"flex-start\"\n            justifyContent=\"flex-start\"\n          >\n            <Heading>⚡️Dub Squad Dashboard</Heading>\n          </Flex>\n          <Text color=\"gray.500\">let's get dem dubs</Text>\n          <Text color=\"gray.500\">{this.state.updatedAgo && <DataUpdater time={this.state.updatedAgo} refreshFn={this.handleDataRefresh} />}</Text>\n        </Flex>\n        <Grid templateColumns=\"repeat(auto-fit, minmax(300px, 1fr))\" gap={6} p={10}>\n          {this.state.matches ? (\n            <>\n              {this.state.matches.slice(0, this.state.pageOffset + PAGE_AMOUNT).map((match => (<MatchStats match={match} key={match[0].matchId} linkable/>)))}\n            </>\n          ) : (<Progress size=\"xs\" isIndeterminate />)\n          }\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Home;","C:\\Users\\kedar\\Documents\\cod\\client\\src\\components\\Home\\index.js",[],"C:\\Users\\kedar\\Documents\\cod\\client\\src\\components\\GameDetail\\index.js",[],"C:\\Users\\kedar\\Documents\\cod\\client\\src\\components\\GameDetail\\GameDetail.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":6,"column":25,"nodeType":"55","endLine":6,"endColumn":36},{"ruleId":"56","severity":1,"message":"57","line":14,"column":3,"nodeType":"55","messageId":"58","endLine":14,"endColumn":14},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","no-unused-vars","'ModalFooter' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation"]